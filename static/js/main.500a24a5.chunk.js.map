{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/InputCreator.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputCreator","handleChange","name","hasError","htmlFor","id","onChange","NewMovie","state","submitDisabled","event","target","value","setState","formClear","this","onSubmit","preventDefault","props","onAdd","type","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.500a24a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const InputCreator = (\n  { handleChange, name, hasError },\n) => (\n  <>\n    <label htmlFor={name}>{name}</label>\n    <input\n      className=\"input\"\n      name={name}\n      id={name}\n      onChange={handleChange}\n    />\n    {\n      hasError\n        ? <span className=\"form__error\">{`Please enter the ${name}`}</span>\n        : ''\n    }\n  </>\n);\n\nInputCreator.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputCreator } from './InputCreator';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    submitDisabled: true,\n  };\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  formClear = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      submitDisabled: true,\n    });\n  }\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId, submitDisabled,\n    } = this.state;\n\n    return (\n      <form\n        name=\"newMovie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.props.onAdd(\n            title, description, imgUrl, imdbUrl, imdbId, submitDisabled,\n          );\n          this.formClear();\n        }}\n      >\n        <InputCreator name=\"title\" handleChange={this.handleChange} />\n        <InputCreator name=\"description\" handleChange={this.handleChange} />\n        <InputCreator name=\"imgUrl\" handleChange={this.handleChange} />\n        <InputCreator name=\"imdbUrl\" handleChange={this.handleChange} />\n        <InputCreator name=\"imdbId\" handleChange={this.handleChange} />\n        <button type=\"submit\" className=\"submitButton\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}